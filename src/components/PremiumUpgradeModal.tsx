import React, { useState } from 'react';
import { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';
import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Crown, Heart, MessageCircle, Users, Zap, CheckCircle, Loader2 } from 'lucide-react';
import { supabase } from '@/integrations/supabase/client';
import { useToast } from '@/hooks/use-toast';

interface PremiumUpgradeModalProps {
  isOpen: boolean;
  onClose: () => void;
  onSuccess?: () => void;
  userId?: string;
  userEmail?: string;
}

const PremiumUpgradeModal = ({ isOpen, onClose, onSuccess, userId, userEmail }: PremiumUpgradeModalProps) => {
  const [isProcessing, setIsProcessing] = useState(false);
  const { toast } = useToast();

  const premiumFeatures = [
    {
      icon: <Heart className="w-5 h-5 text-pink-500" />,
      title: "Kh√¥ng gi·ªõi h·∫°n l∆∞·ª£t th√≠ch",
      description: "Th√≠ch kh√¥ng gi·ªõi h·∫°n m·ªçi profile b·∫°n y√™u th√≠ch"
    },
    {
      icon: <MessageCircle className="w-5 h-5 text-blue-500" />,
      title: "Chat kh√¥ng gi·ªõi h·∫°n",
      description: "Nh·∫Øn tin v·ªõi t·∫•t c·∫£ matches c·ªßa b·∫°n"
    },
    {
      icon: <Users className="w-5 h-5 text-green-500" />,
      title: "Xem ai ƒë√£ th√≠ch b·∫°n",
      description: "Bi·∫øt ngay ai ƒëang quan t√¢m ƒë·∫øn b·∫°n"
    },
    {
      icon: <Zap className="w-5 h-5 text-yellow-500" />,
      title: "Boost profile",
      description: "Profile c·ªßa b·∫°n s·∫Ω ƒë∆∞·ª£c ∆∞u ti√™n hi·ªÉn th·ªã"
    },
    {
      icon: <Crown className="w-5 h-5 text-purple-500" />,
      title: "Badge Premium",
      description: "Hi·ªÉn th·ªã badge Premium tr√™n profile"
    }
  ];

  const handleUpgrade = async () => {
    if (!userId) {
      toast({
        title: "L·ªói x√°c th·ª±c",
        description: "Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ ti·∫øp t·ª•c",
        variant: "destructive"
      });
      return;
    }

    setIsProcessing(true);
    
    try {
      console.log('üöÄ Starting premium upgrade process...');
      
      const { data, error } = await supabase.functions.invoke('create-payos-payment', {
        body: {
          packageType: "dating_week", // Default to 1 week premium
          userId: userId,
          userEmail: userEmail || ""
        }
      });

      if (error) {
        console.error('‚ùå Error creating payment:', error);
        throw error;
      }

      if (data?.error === 0 && data?.data?.checkoutUrl) {
        console.log('‚úÖ Payment link created successfully');
        toast({
          title: "ƒêang chuy·ªÉn h∆∞·ªõng...",
          description: "B·∫°n s·∫Ω ƒë∆∞·ª£c chuy·ªÉn ƒë·∫øn trang thanh to√°n PayOS",
        });
        
        // Redirect to PayOS checkout
        window.open(data.data.checkoutUrl, '_blank');
        onClose();
        
        if (onSuccess) {
          onSuccess();
        }
      } else {
        throw new Error(data?.message || 'Kh√¥ng th·ªÉ t·∫°o li√™n k·∫øt thanh to√°n');
      }
    } catch (error) {
      console.error('üí• Payment error:', error);
      toast({
        title: "L·ªói thanh to√°n",
        description: "C√≥ l·ªói x·∫£y ra khi t·∫°o li√™n k·∫øt thanh to√°n. Vui l√≤ng th·ª≠ l·∫°i.",
        variant: "destructive"
      });
    } finally {
      setIsProcessing(false);
    }
  };

  return (
    <Dialog open={isOpen} onOpenChange={onClose}>
      <DialogContent className="max-w-md">
        <DialogHeader>
          <DialogTitle className="flex items-center gap-2 text-center">
            <Crown className="w-6 h-6 text-yellow-500" />
            N√¢ng c·∫•p Premium
          </DialogTitle>
        </DialogHeader>

        <div className="space-y-6">
          {/* Price Card */}
          <Card className="p-4 bg-gradient-to-r from-purple-50 to-pink-50 border-purple-200">
            <div className="text-center">
              <div className="flex items-center justify-center gap-2 mb-2">
                <Badge variant="secondary" className="bg-yellow-100 text-yellow-800">
                  üî• ∆Øu ƒë√£i ƒë·∫∑c bi·ªát
                </Badge>
              </div>
              <div className="text-3xl font-bold text-purple-600 mb-1">
                99,000 VNƒê
              </div>
              <div className="text-sm text-gray-600">
                30 ng√†y s·ª≠ d·ª•ng Premium
              </div>
            </div>
          </Card>

          {/* Features List */}
          <div className="space-y-3">
            <h4 className="font-semibold text-gray-900">Quy·ªÅn l·ª£i Premium:</h4>
            {premiumFeatures.map((feature, index) => (
              <div key={index} className="flex items-start gap-3">
                <div className="mt-0.5">{feature.icon}</div>
                <div>
                  <div className="font-medium text-sm">{feature.title}</div>
                  <div className="text-xs text-gray-600">{feature.description}</div>
                </div>
              </div>
            ))}
          </div>

          {/* Action Buttons */}
          <div className="space-y-3 pt-4">
            <Button 
              onClick={handleUpgrade}
              disabled={isProcessing}
              className="w-full bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600"
            >
              {isProcessing ? (
                <>
                  <Loader2 className="w-4 h-4 mr-2 animate-spin" />
                  ƒêang x·ª≠ l√Ω...
                </>
              ) : (
                <>
                  <Crown className="w-4 h-4 mr-2" />
                  N√¢ng c·∫•p ngay
                </>
              )}
            </Button>
            
            <Button variant="outline" onClick={onClose} className="w-full">
              ƒê·ªÉ sau
            </Button>
          </div>

          {/* Payment Info */}
          <div className="text-center text-xs text-gray-500 pt-2 border-t">
            <div className="flex items-center justify-center gap-1 mb-1">
              <CheckCircle className="w-3 h-3" />
              Thanh to√°n an to√†n qua PayOS
            </div>
            <div>H·ªó tr·ª£ thanh to√°n qua QR Banking, ATM, Visa, Mastercard</div>
          </div>
        </div>
      </DialogContent>
    </Dialog>
  );
};

export default PremiumUpgradeModal;