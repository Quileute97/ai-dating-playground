import React, { useEffect, useState } from 'react';
import { useNavigate, useSearchParams } from 'react-router-dom';
import { CheckCircle, Crown, ArrowRight, Loader2 } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';
import { supabase } from '@/integrations/supabase/client';
import { useToast } from '@/hooks/use-toast';

const PaymentSuccess = () => {
  const navigate = useNavigate();
  const [searchParams] = useSearchParams();
  const [isVerifying, setIsVerifying] = useState(true);
  const [paymentVerified, setPaymentVerified] = useState(false);
  const { toast } = useToast();

  const orderCode = searchParams.get('orderCode');

  useEffect(() => {
    const verifyPayment = async () => {
      if (!orderCode) {
        setIsVerifying(false);
        return;
      }

      try {
        console.log('üîç Verifying payment for order:', orderCode);
        
        const { data, error } = await supabase.functions.invoke('check-payment-status', {
          body: null,
        });

        if (error) {
          console.error('‚ùå Error verifying payment:', error);
          throw error;
        }

        if (data?.success && data?.data?.isPaid) {
          setPaymentVerified(true);
          toast({
            title: "üéâ Thanh to√°n th√†nh c√¥ng!",
            description: "T√†i kho·∫£n Premium c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c k√≠ch ho·∫°t.",
          });
        }
      } catch (error) {
        console.error('üí• Payment verification error:', error);
        toast({
          title: "Kh√¥ng th·ªÉ x√°c minh thanh to√°n",
          description: "Vui l√≤ng li√™n h·ªá h·ªó tr·ª£ n·∫øu b·∫°n ƒë√£ thanh to√°n th√†nh c√¥ng.",
          variant: "destructive"
        });
      } finally {
        setIsVerifying(false);
      }
    };

    verifyPayment();
  }, [orderCode, toast]);

  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-50 to-pink-50 flex items-center justify-center p-4">
      <Card className="max-w-md w-full p-8 text-center">
        {isVerifying ? (
          <div className="space-y-4">
            <Loader2 className="w-16 h-16 mx-auto text-purple-500 animate-spin" />
            <h1 className="text-2xl font-bold text-gray-800">
              ƒêang x√°c minh thanh to√°n...
            </h1>
            <p className="text-gray-600">
              Vui l√≤ng ch·ªù trong gi√¢y l√°t
            </p>
          </div>
        ) : (
          <div className="space-y-6">
            <div className="flex justify-center">
              <div className="relative">
                <CheckCircle className="w-20 h-20 text-green-500" />
                <Crown className="w-8 h-8 text-yellow-500 absolute -top-2 -right-2" />
              </div>
            </div>

            <div>
              <h1 className="text-2xl font-bold text-gray-800 mb-2">
                {paymentVerified ? 'Thanh to√°n th√†nh c√¥ng!' : 'C·∫£m ∆°n b·∫°n!'}
              </h1>
              <p className="text-gray-600">
                {paymentVerified 
                  ? 'T√†i kho·∫£n Premium c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c k√≠ch ho·∫°t v√† s·∫µn s√†ng s·ª≠ d·ª•ng.'
                  : 'Ch√∫ng t√¥i ƒëang x√°c minh thanh to√°n c·ªßa b·∫°n. B·∫°n s·∫Ω nh·∫≠n ƒë∆∞·ª£c th√¥ng b√°o khi ho√†n t·∫•t.'
                }
              </p>
            </div>

            {paymentVerified && (
              <div className="bg-gradient-to-r from-purple-100 to-pink-100 rounded-lg p-4">
                <h3 className="font-semibold text-purple-800 mb-2">
                  üéâ Ch√∫c m·ª´ng! B·∫°n ƒë√£ l√† th√†nh vi√™n Premium
                </h3>
                <ul className="text-sm text-purple-700 text-left space-y-1">
                  <li>‚Ä¢ Kh√¥ng gi·ªõi h·∫°n l∆∞·ª£t th√≠ch</li>
                  <li>‚Ä¢ Chat v·ªõi t·∫•t c·∫£ matches</li>
                  <li>‚Ä¢ Xem ai ƒë√£ th√≠ch b·∫°n</li>
                  <li>‚Ä¢ Profile ƒë∆∞·ª£c ∆∞u ti√™n hi·ªÉn th·ªã</li>
                </ul>
              </div>
            )}

            <div className="space-y-3">
              <Button 
                onClick={() => navigate('/')}
                className="w-full bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600"
              >
                B·∫Øt ƒë·∫ßu s·ª≠ d·ª•ng Premium
                <ArrowRight className="w-4 h-4 ml-2" />
              </Button>
              
              {orderCode && (
                <p className="text-xs text-gray-500">
                  M√£ ƒë∆°n h√†ng: {orderCode}
                </p>
              )}
            </div>
          </div>
        )}
      </Card>
    </div>
  );
};

export default PaymentSuccess;